"
" vim config for Deryck Hodge.
"

" Vundle for vim package management.
set nocompatible
filetype off
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
    Plugin 'VundleVim/Vundle.vim'
    Plugin 'dense-analysis/ale'
    Plugin 'Valloric/YouCompleteMe'
    Plugin 'scrooloose/nerdcommenter'
    Plugin 'alvan/vim-closetag'
    Plugin 'vim-airline/vim-airline'
    Plugin 'vim-airline/vim-airline-themes'
    Plugin 'preservim/nerdtree'
call vundle#end()
" Vundle is all done. Some of the things set above
" get overridden intentionally below.

syntax enable
colorscheme atom-dark-256

" Disable all beeps and bells.
set noeb vb t_vb=

filetype on
filetype plugin on
set ts=4 sts=4 sw=4 tw=80 et
set number
set fileformat=unix
set fileformats=unix,dos

" Filetype-based indent and spacing, only for filetypes
" that are different than the default above.
autocmd FileType css,json,terraform,tf set ts=2 sts=2 sw=2
autocmd FileType htmldjango,xhtml,html set ts=2 sts=2 sw=2 tw=100
autocmd FileType c,cpp set ts=8 sts=8 sw=8 noet

" Pickup any file with Jenkinsfile in the name as Groovy.
autocmd BufRead,BufNewFile *Jenkinsfile* setfiletype groovy

" This ensures Ale doesn't report errors inline
" at the cursor in the code text.
let g:ale_virtualtext_cursor = 'disabled'

" YouCompleteMe setup: Read tags files.
" Tag files need --fields=+l option
" for YouCompleteMe to be able to read them.
let g:ycm_collect_identifiers_from_tags_files = 1
" Not YouCompleteMe specific, but helps not open
" preview in a new buffer.
set completeopt=menuone

" NerdCommenter setup.
let g:NERDSpaceDelims = 0
let g:NERDTrimTrailingWhitespace = 1

" Start NERDTree when Vim is started without file arguments.
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 0 && !exists('s:std_in') | NERDTree | endif

" Exit Vim if NERDTree is the only window remaining in the only tab.
autocmd BufEnter * if tabpagenr('$') == 1 && winnr('$') == 1 && exists('b:NERDTree') && b:NERDTree.isTabTree() | call feedkeys(":quit\<CR>:\<BS>") | endif

" closetag setup.
let g:closetag_filenames = "*.html,*.xhtml,*.jsx"

" Airline status line setup.
let g:airline_theme='dark'

" Don't write backup files.
" Swap files are good enough.
set nobackup
set nowritebackup

" Highlight long lines
match Error /\%>100v.\+/

" Highlight extraneous whitespace and tabs.
set list
set listchars=tab:>.,trail:-

" Open a new line and add a pdb statement.
map <leader>pdb oimport pdb;pdb.set_trace()<Esc>^
